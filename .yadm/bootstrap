#!/bin/bash
cd "$HOME"
AFIDE="$HOME/.afide"

system_type=$(uname -s)


if ! command -v brew >/dev/null 2>&1; then
    echo "Installing homebrew"
    if [ "$system_type" = "Darwin" ]; then
        /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
    else
        sh -c "$(curl -fsSL https://raw.githubusercontent.com/Linuxbrew/install/master/install.sh)"
    fi
fi

# Install/update brew bundle
if [ -f "$AFIDE/Brewfile" ]; then
    echo "Updating homebrew bundle"
    brew update
    brew doctor && brew bundle --global
fi
if [ "$system_type" = "Darwin" ]; then
  # Setup iTerm2
  if [ -d "$HOME/.iterm2" ]; then
    echo "Setting iTerm preference folder"
    defaults write com.googlecode.iterm2.plist PrefsCustomFolder -string "$HOME/.iterm2"
    defaults write com.googlecode.iterm2.plist LoadPrefsFromCustomFolder -bool true
  fi
fi
# pyenv
curl https://pyenv.run | zsh
exec "SHELL"
pyenv install 2.7.15
pyenv install 3.7.3
pyenv virtualenv 2.7.15 afide2
pyenv activate afide2 && pip install neovim
pyenv virtualenv 3.7.3 afide3
pyenv activate afide3 && pip install neovim

# antibody:
if command -v antibody >/dev/null 2>&1; then \
    curl -sfL git.io/antibody | sh -s - -b "$AFIDE/bin"; \
fi

# Bootstrap neovim
if command -v nvim >/dev/null 2>&1; then
    echo "Bootstraping Neovim"
    curl -sfLo "$AFIDE/bin/nvim" --create-dirs \
        https://github.com/neovim/neovim/releases/download/v0.3.7/nvim.appimage
    chmod u+x "$AFIDE/bin/nvim"
    sudo mv /tmp/nvim /usr/local/bin/nvim
	mkdir -p ~/.vim/autoload
	mkdir -p ~/.config/nvim
	curl -sfLo ~/.local/share/nvim/site/autoload/plug.vim --create-dirs \
		https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
fi
nvim '+PlugUpdate' '+PlugClean!' '+PlugUpdate' '+qall'

# Bootstrap tmux
if command -v tmux >/dev/null 2>&1; then
  echo "Bootstrapping tmux"
  if [ ! -d "$HOME/.tmux/plugins/tpm" ]; then
    # installing tmux-plugin-manager and plugins
    mkdir -p "$HOME/.tmux/plugins"
    git clone https://github.com/tmux-plugins/tpm "$HOME/.tmux/plugins/tpm"
    "$HOME"/.tmux/plugins/tpm/bin/install_plugins
  else
    # updating tpm and plugins
    cd "$HOME/.tmux/plugins/tpm"
    git pull -p
    cd "$HOME"
    "$HOME"/.tmux/plugins/tpm/bin/update_plugins all
  fi
fi

