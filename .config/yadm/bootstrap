#!/usr/bin/env bash

set -x

cd "$HOME" || exit

system_type=$(uname -s)

if [ "$system_type" = "Darwin" ]; then
    if ! command -v brew >/dev/null 2>&1; then
        echo "Installing homebrew"
        /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
    fi
    echo "Updating homebrew bundles"
    cd "$HOME" && brew doctor && brew bundle
else
    # [ ! -z "$sudo" ] && echo "Updating system package requires you pass"
    sudo apt-get update 
    sudo apt-get install -y `cat Aptfile`
    curl https://nodejs.org/dist/v12.16.1/node-v12.16.1-linux-x64.tar.xz | tar x
    mv node-v12.16.1-linux-x64 node
    sudo curl -sfLo /usr/local/bin/nvim \
        https://github.com/neovim/neovim/releases/download/v0.4.3/nvim.appimage
    sudo chmod +x /usr/local/bin/nvim
    if ! command -v antibody >/dev/null 2>&1; then
        curl -sfL git.io/antibody | sudo sh -s - -b /usr/local/bin
    fi
fi
# neovim's plug manager
if [ ! -f "$HOME/.local/share/nvim/site/autoload/plug.vim" ]; then
	curl -sfLo ~/.local/share/nvim/site/autoload/plug.vim --create-dirs \
		https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
fi

# neovim's python libraries
python3 -m pip install --user --upgrade pip setuptools wheel
python3 -m pip install --user --upgrade pynvim
python2 -m pip install --user --upgrade pip setuptools wheel
python2 -m pip install --user --upgrade pynvim
sudo npm install -g neovim

# Running neovim to update the plugins
nvim '+PlugUpdate' '+PlugClean!' '+PlugUpdate' '+qall'

# Bootstrap tmux
if [ ! -d "$HOME/.tmux/plugins/tpm" ]; then
    mkdir -p "$HOME/.tmux/plugins"
    # installing tmux-plugin-manager and plugins
    git clone https://github.com/tmux-plugins/tpm "$HOME/.tmux/plugins/tpm"
    "$HOME"/.tmux/plugins/tpm/bin/install_plugins
else
    # updating tpm and plugins
    cd "$HOME/.tmux/plugins/tpm" || git pull -p
    cd "$HOME" || "$HOME"/.tmux/plugins/tpm/bin/update_plugins all
fi
# termino
tic "$HOME/.terminfo/xterm-256color-italic.terminfo"
# changing the shell to zsh for interactive sessions only
case $- in
  *) echo "Running in a script, not changing default shell"
     ;;
  *i*) echo ">>> Please enter you password to make zsh your default shell."
    chsh -s "$(command -v zsh)" || echo "*** Failed to chsh, please run it manually"  
    ;;  
esac
